?quantile
data("mtcars")
# média
mean(mtcars$mpg)
# mediana
median(mtcars$mpg)
# quantis
quantile(x = mtcars$mpg)
quantile(x = mtcars$mpg, probs = c(0,1,0.1))
quantile(x = mtcars$mpg, probs = c(0,1,0.01))
quantile(x = mtcars$mpg, probs = seq(0,1,0.1))
quantile(x = mtcars$mpg, probs = seq(0,1,0.01))
# gerando valores aleatórios de uma Poisson
x <- rpois(n = 1000, lambda = 7)
?dpois
plot(x, ppois(x, 1), type = "s", ylab = "F(x)", main = "Poisson(1) CDF")
plot(x, ppois(x, 1), type = "l", ylab = "F(x)", main = "Poisson(1) CDF")
plot(x, ppois(x, 7), type = "l", ylab = "F(x)", main = "Poisson(1) CDF")
plot(x)
# gerando valores da densidade da Poisson
y <- dpois(x = x, lambda = 7)
plot(x,y)
plot(x, y, type = "b")
plot(x, y, type = "l")
x <- rbinom(n = 1000, size = 450, prob = 1/7)
# gerando valores da densidade de uma Binomial
y <- dbinom(x = x, size = 450, prob = 1/7)
plot(x, y, main = "Binomial")
# gerando valores aleatórios de uma Poisson
x <- rnorm(n = 1000)
# gerando valores aleatórios de uma Poisson
x <- rnorm(n = 1000)
# gerando valores da densidade da Poisson
y <- dnorm(x = x)
plot(x, y, main = "Normal")
plot(x, y, main = "Normal", type = "l")
# Define the density domain
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
#Plot a uniform density
plot(x,dunif(x,min=2,max=4),main="Uniform",type="l",ylim=ylim)
#Plot a Normal density
plot(x,dnorm(x,mean=3,sd=1),main="Normal",type="l",ylim=ylim)
#Plot an Exponential density
plot(x,dexp(x,rate=1/2),main="Exponential",type="l",ylim=ylim)
#Plot a Gamma density
plot(x,dgamma(x,shape=2,rate=1),main="Gamma",type="l",ylim=ylim)
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
plot(x, dpois(x = x, lambda = mean(x)), main = "Poisson", ylim = ylim)
# gerando valores da densidade da Poisson
y <- dpois(x = x, lambda = mean(x))
plot(x, dpois(x = x, lambda = mean(x)), main = "Poisson", ylim = ylim)
# gerando valores aleatórios de uma Poisson
x <- rpois(n = 1000, lambda = 7)
# gerando valores da densidade da Poisson
y <- dpois(x = x, lambda = mean(x))
plot(x, y, main = "Poisson")
curve(density(x))
plot(x, y, main = "Poisson")
curve(density(x))
plot(x, y, main = "Poisson")
lines(density(x))
lines(dpois(x, lambda = 7), col = "red")
lines(x, dpois(x, lambda = 7), col = "red")
curve(x, dpois(x, lambda = 7), col = "red")
plot(x, y, main = "Poisson")
lines(density(x))
lines(x, dpois(x, lambda = 7), col = "red")
# Definindo um novo domínio para a densidade
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
# Plot da densidade da Normal para um x qualquer
plot(x,dnorm(x,mean=3,sd=1), main="Normal", type="l", ylim=ylim)
lines(x, dnorm(x,mean=5,sd=1), col = "red")
lines(x, dnorm(x,mean=2,sd=1), col = "blue")
lines(x, dnorm(x,mean=2,sd=0.2), col = "blue")
lines(x, dnorm(x,mean=2,sd=0.5), col = "blue")
lines(x, dnorm(x,mean=2,sd=0.6), col = "blue")
lines(x, dnorm(x,mean=2,sd=0.8), col = "blue")
lines(x, dnorm(x,mean=2,sd=1.5), col = "blue")
lines(x, dnorm(x,mean=2,sd=0.9), col = "blue")
# gerando valores aleatórios de uma Poisson
x <- runif(n = 1000)
# gerando valores da densidade da Poisson
y <- dunif(x,min=2,max=4)
# Plot da densidade da Normal para um x de valores normais
plot(x, y, main = "Uniform")
# Definindo um novo domínio para a densidade
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
# Plot da densidade da Uniform para um x qualquer
plot(x, y = dunif(x,min=2,max=4), main="Uniforme", type="l", ylim=ylim)
lines(x, dunif(xmin=0,max=6), col = "red")
lines(x, dunif(x,min=0,max=6), col = "red")
lines(x, dunif(x,min=1,max=3), col = "blue")
?runif
# gerando valores aleatórios de uma Poisson
x <- runif(n = 1000, min=2,max=4)
# gerando valores da densidade da Poisson
y <- dunif(x,min=2,max=4)
# Plot da densidade da Normal para um x de valores normais
plot(x, y, main = "Uniform")
# gerando valores aleatórios de uma Exponencial
x <- rexp(n = 1000, rate = 1/2)
# gerando valores da densidade da Exponencial
y <- dexp(x,rate=1/2)
# Plot da densidade da Exponencial para um x de valores exp
plot(x, y, main = "Exponencial")
# Plot da densidade da Exponencial para um x de valores exp
plot(x, y, main = "Exponencial", type = "l")
# Definindo um novo domínio para a densidade
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
# Plot da densidade da Exponencial para um x qualquer
plot(x, y = dexp(x,rate=1/2),main="Exponential",type="l",ylim=ylim)
lines(x, dexp(x,rate=1/10), col = "red")
lines(x, dexp(x,rate=2), col = "blue")
lines(x, dexp(x,rate=1/6), col = "red")
lines(x, dexp(x,rate=1/4), col = "red")
# gerando valores aleatórios de uma Gamma
x <- rgamma(n = 1000, shape = 2)
# gerando valores da densidade da Gamma
y <- dgamma(x,shape=2,rate=1)
# Plot da densidade da Gamma para um x de valores gamma
plot(x, y, main = "Gamma")
# Definindo um novo domínio para a densidade
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
# Plot da densidade da Gamma para um x qualquer
plot(x,y = dgamma(x,shape=2,rate=1),main="Gamma",type="l",ylim=ylim)
lines(x, dgamma(x,shape=4,rate=1), col = "red")
lines(x, dgamma(x,shape=1,rate=2), col = "blue")
rm(list = ls())
# gerando valores aleatórios de uma Poisson
x <- rpois(n = 1000, lambda = 7)
# gerando valores da densidade da Poisson
y <- dpois(x = x, lambda = mean(x))
plot(x, y, main = "Poisson")
x <- rbinom(n = 1000, size = 450, prob = 1/7)
# gerando valores da densidade de uma Binomial
y <- dbinom(x = x, size = 450, prob = 1/7)
plot(x, y, main = "Binomial")
# gerando valores aleatórios de uma Poisson
x <- rnorm(n = 1000)
# gerando valores da densidade da Poisson
y <- dnorm(x = x)
# Plot da densidade da Normal para um x de valores normais
plot(x, y, main = "Normal")
# Definindo um novo domínio para a densidade
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
# Plot da densidade da Normal para um x qualquer
plot(x,dnorm(x,mean=3,sd=1), main="Normal", type="l", ylim=ylim)
lines(x, dnorm(x,mean=5,sd=1), col = "red")
lines(x, dnorm(x,mean=2,sd=0.8), col = "blue")
# Definindo um novo domínio para a densidade
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
# Plot da densidade da Uniform para um x qualquer
plot(x, y = dunif(x,min=2,max=4), main="Uniforme", type="l", ylim=ylim)
lines(x, dunif(x,min=1,max=3), col = "blue")
# gerando valores aleatórios de uma Exponencial
x <- rexp(n = 1000, rate = 1/2)
# gerando valores da densidade da Exponencial
y <- dexp(x,rate=1/2)
# Plot da densidade da Exponencial para um x de valores exp
plot(x, y, main = "Exponencial")
# Definindo um novo domínio para a densidade
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
# Plot da densidade da Exponencial para um x qualquer
plot(x, y = dexp(x,rate=1/2),main="Exponential",type="l",ylim=ylim)
lines(x, dexp(x,rate=1/4), col = "red")
lines(x, dexp(x,rate=2), col = "blue")
# gerando valores aleatórios de uma Gamma
x <- rgamma(n = 1000, shape = 2)
# gerando valores da densidade da Gamma
y <- dgamma(x,shape=2,rate=1)
# Plot da densidade da Gamma para um x de valores gamma
plot(x, y, main = "Gamma")
# Definindo um novo domínio para a densidade
x <- seq(from=0,to=6,length.out=100)
ylim<-c(0,0.6)
# Plot da densidade da Gamma para um x qualquer
plot(x,y = dgamma(x,shape=2,rate=1),main="Gamma",type="l",ylim=ylim)
lines(x, dgamma(x,shape=4,rate=1), col = "red")
lines(x, dgamma(x,shape=1,rate=2), col = "blue")
# lendo dados do tipo csv na pasta do projeto
mtcars <- read.csv(file = "mtcars.csv")
# lendo dados do tipo excel -- precisa de pacote
library(readxl)
insetos <- read_xlsx(path = "C:/Users/Heloiza/Downloads/InsectSprays.xlsx", sheet = 1)
sprays <- read_xlsx(path = "OrchardSprays.xlsx")
# lendo dados do tipo txt
insetos <- read.table("C:/Users/Heloiza/Downloads/InsectSprays.txt", header = TRUE)
sprays <- read.table("C:/Users/Heloiza/Downloads/OrchardSprays.txt", header = TRUE)
# lendo dados do R ou de pacotes do R
data("diamonds") # conjunto de dados do pacote ggplot2
?sd
?var
View(mtcars)
sd(mtcars$cyl)
View(insetos)
View(mtcars)
View(insetos)
?mtcard
?mtcars
?plto
?plot
plot(insetos$spray)
plot(table(insetos$spray))
plot(table(insetos$spray), type = "p")
View(sprays)
plot(table(sprays$treatment))
plot(table(sprays$treatment), type = "p")
?barplot
View(sprays)
names(sprays)
barplot(decrease ~ treatment, data = sprays)
View(insetos)
force(longley)
force(data(longley))
barplot(Employed ~ Year, data = longley)
?boxplot
# gráfico de linhas
plot(Employed ~ Year, data = longley, type = "l")
